# ============================
# üß± Etapa 1: Construcci√≥n con Maven (usa cache de dependencias)
# ============================
FROM maven:3.9.6-eclipse-temurin-17 AS build
WORKDIR /app

# ‚úÖ Copiamos solo el pom.xml primero para aprovechar la cach√© de Maven
COPY pom.xml .

# üî• Descarga dependencias sin compilar el proyecto
RUN mvn dependency:go-offline -B

# ‚úÖ Ahora copiamos el c√≥digo fuente
COPY src ./src

# ‚öôÔ∏è Compila el JAR (sin ejecutar tests)
RUN mvn clean package -DskipTests

# ============================
# ‚òÅÔ∏è Etapa 2: Imagen final ligera para ejecuci√≥n
# ============================
FROM eclipse-temurin:17-jdk-alpine

# ‚úÖ Imagen "alpine" = mucho m√°s r√°pida y liviana (~200MB menos)
WORKDIR /app

# ‚úÖ Copiamos el JAR desde la etapa anterior
COPY --from=build /app/target/*.jar app.jar

# Variables de entorno (Render las puede sobreescribir)
ENV DB_URL=""
ENV DB_USER=""
ENV DB_PASS=""

# Exponemos el puerto que Render usa por defecto
EXPOSE 8080

# ‚úÖ Ejecuta el JAR
ENTRYPOINT ["java", "-jar", "app.jar"]

